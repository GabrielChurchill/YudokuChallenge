Replit Brief — “Board is cut off” (root cause & fix)
Problem (what we’re seeing)
Across desktop, iPad, and phones the Sudoku board is clipped by the keypad or card edge. Users can’t see bottom rows.

Why this happens (root causes)
Layout doesn’t reserve space for the keypad.
The board is sized as if it owns the whole viewport; the keypad then overlays or pushes it out of view.

Viewport math is brittle on iOS.
Using 100vh ignores Safari’s dynamic toolbars → effective height is smaller than your math.

Containers with min-height:auto are clamping the board.
In grid/flex layouts, children default to min-height:auto, which causes internal overflow. You need min-height:0 on the board wrapper.

No single “board size” variable.
Different breakpoints compute size differently (or not at all), so the board doesn’t stay square or clipped.

One solution that works everywhere
Make the stage explicitly account for the keypad and compute a single --board-size from the actual space left. Use dynamic viewport height and safe-area insets. The board becomes a perfect square that never exceeds the reserved area, and the keypad never overlaps.

Layout model (consistent across devices)
Phone: two-row stage → board over keypad (compact keypad, ~25–30% height).

iPad: same as phone but keypad can be a bit taller (26–32% height).

Desktop: either keep bottom keypad (works) or use side-by-side. (If you already shipped bottom keypad on desktop, this sizing still prevents overlap.)

Implementation (drop-in CSS + tiny JS)
1) Markup (unchanged / reference)
html
Copy
Edit
<div class="play">
  <header class="app-header">…timer…mistakes…</header>

  <main class="stage">
    <section class="board-wrap">
      <div class="board-outer">
        <div id="board" class="grid">…81 cells…</div>
      </div>
    </section>

    <aside class="custom-keypad">
      <div class="keys">…1–9…</div>
      <div class="actions">…Clear / Hint (+30s) / Stop…</div>
    </aside>
  </main>
</div>
2) Variables (one source of truth)
css
Copy
Edit
:root{
  --header-h: 84px;               /* adjust to your header */
  --gutter: 16px;
  --keypad-h: clamp(180px, 28vh, 240px);   /* phones: ~25–30% of screen */
}
@media (min-width: 768px){  /* iPad */
  :root{ --keypad-h: clamp(220px, 26vh, 300px); }
}
3) Stage layout & dynamic viewport height
css
Copy
Edit
/* Always use dynamic viewport height to avoid iOS Safari toolbar jumps */
.play { display:grid; grid-template-rows:auto 1fr; height: var(--vh, 100dvh); }

.stage{
  display:grid;
  grid-template-rows: 1fr auto;           /* board | keypad */
  height: calc(var(--vh, 100dvh) - var(--header-h));
  overflow: hidden;                        /* prevents overlay/bleed */
}

/* Keypad is docked and compact; never more than ~30% */
.custom-keypad{
  height: calc(var(--keypad-h) + env(safe-area-inset-bottom));
  padding: 12px 16px calc(12px + env(safe-area-inset-bottom));
  background: var(--card, #fff);
  box-shadow: 0 -8px 24px rgba(0,0,0,.08);
  border-top-left-radius: 20px; border-top-right-radius: 20px;
  display: grid; grid-template-rows: 1fr auto; gap: 12px;
}
4) Board size computed from leftover space
css
Copy
Edit
.board-wrap{ display:grid; place-items:center; min-height:0; } /* critical */

.board-outer{
  /* Available height = viewport - header - keypad - vertical gutters */
  --avail-h: calc(var(--vh, 100dvh) - var(--header-h) - var(--keypad-h) - var(--gutter)*2);
  /* Available width  = viewport width - horizontal gutters */
  --avail-w: calc(100vw - var(--gutter)*2);

  /* The board is the biggest square that fits both dimensions */
  --board-size: min(max(340px, var(--avail-h)), var(--avail-w));

  width:  var(--board-size);
  height: var(--board-size);

  border-radius: 24px;
  overflow: hidden;                         /* clip digits at corners */
  clip-path: inset(0 round 24px);           /* extra safety */
  background: var(--card, #fff);
  box-shadow: 0 8px 24px rgba(0,0,0,.06);
  padding: 8px;                              /* inner breathing room */
}

.grid{
  width:100%; height:100%;
  border-radius: inherit; border-collapse: collapse;
}
.cell{ border:1.5px solid var(--divider-dark, #1E2433); line-height:1; }
5) Optional desktop (side-by-side, if you want it)
If you prefer a right-hand keypad on desktop (prevents super-wide empty space):

css
Copy
Edit
@media (min-width: 1025px){
  .stage{
    grid-template-columns: 1fr 340px;      /* grid | right keypad */
    grid-template-rows: 1fr;
    align-items: center;
  }
  .custom-keypad{ height: auto; position: static; }
  /* Recompute board size for desktop columns */
  .board-outer{
    --avail-h: calc(var(--vh, 100dvh) - var(--header-h) - var(--gutter)*2);
    --avail-w: calc(100vw - 340px - var(--gutter)*3);
    --board-size: min(max(420px, var(--avail-h)), var(--avail-w));
  }
}
6) JS helper for true dynamic viewport on iOS
js
Copy
Edit
// call once on app mount
(function installViewportFit(){
  const fit = () => {
    const h = window.visualViewport?.height ?? window.innerHeight;
    document.documentElement.style.setProperty('--vh', `${h}px`);
  };
  window.visualViewport?.addEventListener('resize', fit);
  window.addEventListener('resize', fit);
  fit();
})();
What this fixes (and why it’s safe)
The board cannot be taller than the space left above the keypad.

The keypad cannot overlap the board (it owns a fixed track in the grid).

iOS toolbars don’t break the math thanks to --vh from visualViewport.

The board stays perfectly square and fully visible at all sizes.

Digits never bleed past rounded corners (overflow:hidden + clip-path).

No scroll during play on phone/iPad; desktop can be bottom-docked or side-by-side without overlap.

Acceptance criteria (QA)
No clipping: all 9 rows/columns visible on phone, iPad, desktop.

No scroll during play on phone/iPad; desktop layout has zero overlap.

Board is square; resizes smoothly on rotate / window resize.

Safe areas respected: no controls behind the home indicator.

Corner bleed eliminated: digits never exceed rounded corners.

Timer + controls stable: header height changes don’t cause board cut-off.